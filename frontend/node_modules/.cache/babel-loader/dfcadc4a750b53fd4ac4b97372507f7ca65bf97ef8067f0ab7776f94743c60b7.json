{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dahew\\\\Desktop\\\\ecom gig\\\\E-commerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\n\n// //initialising the cart with zeroes\n// const getDefaultCart = () => {\n//   let cart = {};\n//   for (let index = 0; index < 300; index++) {\n//     cart[index] = 0;\n//   }\n//   return cart;\n// };\n\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n\n  //initialising the cart with zeroes\n  const getDefaultCart = () => {\n    let cart = {};\n    for (let index = 0; index < 300; index++) {\n      cart[index] = {\n        S: 0,\n        M: 0,\n        L: 0,\n        XL: 0,\n        XXL: 0\n      };\n    }\n    return cart;\n  };\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n\n  // //fetching data from the database onto the products section\n  // useEffect(() => {\n  //   fetch(\"http://localhost:4000/allproducts\")\n  //     .then((res) => res.json())\n  //     .then((data) => setAll_Product(data));\n\n  //   if (localStorage.getItem(\"auth-token\")) {\n  //     fetch(\"http://localhost:4000/getcart\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         Accept: \"application/form-data\",\n  //         \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(),\n  //     })\n  //       .then((resp) => resp.json())\n  //       .then((data) => {\n  //         setCartItems(data);\n  //       });\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/allproducts\").then(res => res.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/getcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify()\n      }).then(resp => resp.json()).then(data => {\n        const productIds = Object.keys(data); // Get all the product IDs from cartData\n        const updatedCartItems = {}; // New object to store updated cart items\n        productIds.forEach(productId => {\n          const cartItem = data[productId];\n          // Check if any of the size fields is greater than 0\n          if (cartItem.L > 0) {\n            // Fetch the corresponding product and update cartItems\n            const product = all_product.find(item => item.id === Number(productId));\n            updatedCartItems[productId] = {\n              ...product,\n              quantity: cartItem.L // Assuming you want to store quantity along with product info\n            };\n          }\n        });\n\n        setCartItems(updatedCartItems);\n      });\n    }\n  }, []);\n\n  //add to cart\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: {\n        ...prev[itemId],\n        L: prev[itemId].L + 1\n      }\n    }));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/addtocart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId: itemId\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n\n  //remove from cart\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: {\n        ...prev[itemId],\n        L: prev[itemId].L - 1\n      }\n    }));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/removefromcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId: itemId\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n\n  //get total cart amount\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item].L > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += cartItems[item].L * itemInfo.new_price;\n      }\n    }\n    return totalAmount;\n  };\n\n  //get total cart items\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item].L > 0) {\n        totalItem += cartItems[item].L;\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"2TWfLOVtZEcAkOpQXwNNYfVqbAU=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","all_product","setAll_Product","getDefaultCart","cart","index","S","M","L","XL","XXL","cartItems","setCartItems","fetch","then","res","json","data","localStorage","getItem","method","headers","Accept","body","JSON","stringify","resp","productIds","Object","keys","updatedCartItems","forEach","productId","cartItem","product","find","item","id","Number","quantity","addToCart","itemId","prev","console","log","removeFromCart","getTotalCartAmount","totalAmount","itemInfo","new_price","getTotalCartItems","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dahew/Desktop/ecom gig/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\n// //initialising the cart with zeroes\r\n// const getDefaultCart = () => {\r\n//   let cart = {};\r\n//   for (let index = 0; index < 300; index++) {\r\n//     cart[index] = 0;\r\n//   }\r\n//   return cart;\r\n// };\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [all_product, setAll_Product] = useState([]);\r\n\r\n  //initialising the cart with zeroes\r\n  const getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < 300; index++) {\r\n      cart[index] = {\r\n        S: 0,\r\n        M: 0,\r\n        L: 0,\r\n        XL: 0,\r\n        XXL: 0,\r\n      };\r\n    }\r\n    return cart;\r\n  };\r\n\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  // //fetching data from the database onto the products section\r\n  // useEffect(() => {\r\n  //   fetch(\"http://localhost:4000/allproducts\")\r\n  //     .then((res) => res.json())\r\n  //     .then((data) => setAll_Product(data));\r\n\r\n  //   if (localStorage.getItem(\"auth-token\")) {\r\n  //     fetch(\"http://localhost:4000/getcart\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         Accept: \"application/form-data\",\r\n  //         \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n  //       body: JSON.stringify(),\r\n  //     })\r\n  //       .then((resp) => resp.json())\r\n  //       .then((data) => {\r\n  //         setCartItems(data);\r\n  //       });\r\n  //   }\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/allproducts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setAll_Product(data));\r\n\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetch(\"http://localhost:4000/getcart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/form-data\",\r\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          const productIds = Object.keys(data); // Get all the product IDs from cartData\r\n          const updatedCartItems = {}; // New object to store updated cart items\r\n          productIds.forEach((productId) => {\r\n            const cartItem = data[productId];\r\n            // Check if any of the size fields is greater than 0\r\n            if (cartItem.L > 0) {\r\n              // Fetch the corresponding product and update cartItems\r\n              const product = all_product.find(\r\n                (item) => item.id === Number(productId)\r\n              );\r\n              updatedCartItems[productId] = {\r\n                ...product,\r\n                quantity: cartItem.L, // Assuming you want to store quantity along with product info\r\n              };\r\n            }\r\n          });\r\n          setCartItems(updatedCartItems);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  //add to cart\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({\r\n      ...prev,\r\n      [itemId]: {\r\n        ...prev[itemId],\r\n        L: prev[itemId].L + 1,\r\n      },\r\n    }));\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetch(\"http://localhost:4000/addtocart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/form-data\",\r\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ itemId: itemId }),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n        });\r\n    }\r\n  };\r\n\r\n  //remove from cart\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prev) => ({\r\n      ...prev,\r\n      [itemId]: {\r\n        ...prev[itemId],\r\n        L: prev[itemId].L - 1,\r\n      },\r\n    }));\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetch(\"http://localhost:4000/removefromcart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/form-data\",\r\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ itemId: itemId }),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n        });\r\n    }\r\n  };\r\n\r\n  //get total cart amount\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item].L > 0) {\r\n        let itemInfo = all_product.find(\r\n          (product) => product.id === Number(item)\r\n        );\r\n        totalAmount += cartItems[item].L * itemInfo.new_price;\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  //get total cart items\r\n  const getTotalCartItems = () => {\r\n    let totalItem = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item].L > 0) {\r\n        totalItem += cartItems[item].L;\r\n      }\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  const contextValue = {\r\n    getTotalCartItems,\r\n    getTotalCartAmount,\r\n    all_product,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n  };\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}