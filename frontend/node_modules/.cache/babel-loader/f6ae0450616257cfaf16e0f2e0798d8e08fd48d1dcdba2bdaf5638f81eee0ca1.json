{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dahew\\\\Desktop\\\\ecom gig\\\\E-commerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\n// import React, { createContext, useEffect, useState } from \"react\";\n\n// export const ShopContext = createContext(null);\n\n// // //initialising the cart with zeroes\n// // const getDefaultCart = () => {\n// //   let cart = {};\n// //   for (let index = 0; index < 300; index++) {\n// //     cart[index] = 0;\n// //   }\n// //   return cart;\n// // };\n\n// const ShopContextProvider = (props) => {\n//   const [all_product, setAll_Product] = useState([]);\n\n//   //initialising the cart with zeroes\n//   const getDefaultCart = () => {\n//     let cart = {};\n//     for (let index = 0; index < 300; index++) {\n//       cart[index] = 0;\n//     }\n//     return cart;\n//   };\n\n//   const [cartItems, setCartItems] = useState(getDefaultCart());\n\n//   //fetching data from the database onto the products section\n//   useEffect(() => {\n//     fetch(\"http://localhost:4000/allproducts\")\n//       .then((res) => res.json())\n//       .then((data) => setAll_Product(data));\n\n//     if (localStorage.getItem(\"auth-token\")) {\n//       fetch(\"http://localhost:4000/getcart\", {\n//         method: \"POST\",\n//         headers: {\n//           Accept: \"application/form-data\",\n//           \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(),\n//       })\n//         .then((resp) => resp.json())\n//         .then((data) => {\n//           setCartItems(data);\n//         });\n//     }\n//   }, []);\n\n//   //add to cart\n//   const addToCart = (itemId) => {\n//     setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\n//     if (localStorage.getItem(\"auth-token\")) {\n//       fetch(\"http://localhost:4000/addtocart\", {\n//         method: \"POST\",\n//         headers: {\n//           Accept: \"application/form-data\",\n//           \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ itemId: itemId }),\n//       })\n//         .then((resp) => resp.json())\n//         .then((data) => {\n//           console.log(data);\n//         });\n//     }\n//   };\n\n//   //remove from cart\n//   const removeFromCart = (itemId) => {\n//     setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\n//     if (localStorage.getItem(\"auth-token\")) {\n//       fetch(\"http://localhost:4000/removefromcart\", {\n//         method: \"POST\",\n//         headers: {\n//           Accept: \"application/form-data\",\n//           \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ itemId: itemId }),\n//       })\n//         .then((resp) => resp.json())\n//         .then((data) => {\n//           console.log(data);\n//         });\n//     }\n//   };\n\n//   //get total cart amount\n//   const getTotalCartAmount = () => {\n//     let totalAmount = 0;\n//     for (const item in cartItems) {\n//       if (cartItems[item] > 0) {\n//         let itemInfo = all_product.find(\n//           (product) => product.id === Number(item)\n//         );\n//         totalAmount += cartItems[item] * itemInfo.new_price;\n//       }\n//     }\n//     return totalAmount;\n//   };\n\n//   //get total cart items\n//   const getTotalCartItems = () => {\n//     let totalItem = 0;\n//     for (const item in cartItems) {\n//       if (cartItems[item] > 0) {\n//         totalItem += cartItems[item];\n//       }\n//     }\n//     return totalItem;\n//   };\n\n//   const contextValue = {\n//     getTotalCartItems,\n//     getTotalCartAmount,\n//     all_product,\n//     cartItems,\n//     addToCart,\n//     removeFromCart,\n//   };\n//   return (\n//     <ShopContext.Provider value={contextValue}>\n//       {props.children}\n//     </ShopContext.Provider>\n//   );\n// };\n\n// export default ShopContextProvider;\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const getDefaultCart = () => {\n    return [];\n  };\n  useEffect(() => {\n    fetch(\"http://localhost:4000/allproducts\").then(res => res.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/getcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify()\n      }).then(resp => resp.json()).then(data => {\n        setCartItems(data);\n      });\n    }\n  }, []);\n  const addToCart = (itemId, size) => {\n    const existingItem = cartItems.find(item => item.product_id === itemId && item.size === size);\n    if (existingItem) {\n      const updatedCart = cartItems.map(item => {\n        if (item.product_id === itemId && item.size === size) {\n          return {\n            ...item,\n            quantity: item.quantity + 1\n          };\n        }\n        return item;\n      });\n      setCartItems(updatedCart);\n    } else {\n      setCartItems([...cartItems, {\n        product_id: itemId,\n        size: size,\n        quantity: 1\n      }]);\n    }\n\n    // Update cart data in the backend\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/addtocart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId: itemId,\n          size: size\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n  const removeFromCart = (itemId, size) => {\n    const existingItem = cartItems.find(item => item.product_id === itemId && item.size === size);\n    if (existingItem && existingItem.quantity > 1) {\n      const updatedCart = cartItems.map(item => {\n        if (item.product_id === itemId && item.size === size) {\n          return {\n            ...item,\n            quantity: item.quantity - 1\n          };\n        }\n        return item;\n      });\n      setCartItems(updatedCart);\n    } else {\n      const updatedCart = cartItems.filter(item => !(item.product_id === itemId && item.size === size));\n      setCartItems(updatedCart);\n    }\n\n    // Update cart data in the backend\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/removefromcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId: itemId,\n          size: size\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item of cartItems) {\n      const itemInfo = all_product.find(product => product.id === item.product_id);\n      if (itemInfo) {\n        totalAmount += item.quantity * itemInfo.new_price;\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item of cartItems) {\n      totalItem += item.quantity;\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"77W2UJgsIlh+D6bFXA6z1gmSxhw=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","getDefaultCart","fetch","then","res","json","data","localStorage","getItem","method","headers","Accept","body","JSON","stringify","resp","addToCart","itemId","size","existingItem","find","item","product_id","updatedCart","map","quantity","console","log","removeFromCart","filter","getTotalCartAmount","totalAmount","itemInfo","product","id","new_price","getTotalCartItems","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dahew/Desktop/ecom gig/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["// import React, { createContext, useEffect, useState } from \"react\";\r\n\r\n// export const ShopContext = createContext(null);\r\n\r\n// // //initialising the cart with zeroes\r\n// // const getDefaultCart = () => {\r\n// //   let cart = {};\r\n// //   for (let index = 0; index < 300; index++) {\r\n// //     cart[index] = 0;\r\n// //   }\r\n// //   return cart;\r\n// // };\r\n\r\n// const ShopContextProvider = (props) => {\r\n//   const [all_product, setAll_Product] = useState([]);\r\n\r\n//   //initialising the cart with zeroes\r\n//   const getDefaultCart = () => {\r\n//     let cart = {};\r\n//     for (let index = 0; index < 300; index++) {\r\n//       cart[index] = 0;\r\n//     }\r\n//     return cart;\r\n//   };\r\n\r\n//   const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n//   //fetching data from the database onto the products section\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:4000/allproducts\")\r\n//       .then((res) => res.json())\r\n//       .then((data) => setAll_Product(data));\r\n\r\n//     if (localStorage.getItem(\"auth-token\")) {\r\n//       fetch(\"http://localhost:4000/getcart\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           Accept: \"application/form-data\",\r\n//           \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(),\r\n//       })\r\n//         .then((resp) => resp.json())\r\n//         .then((data) => {\r\n//           setCartItems(data);\r\n//         });\r\n//     }\r\n//   }, []);\r\n\r\n//   //add to cart\r\n//   const addToCart = (itemId) => {\r\n//     setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n//     if (localStorage.getItem(\"auth-token\")) {\r\n//       fetch(\"http://localhost:4000/addtocart\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           Accept: \"application/form-data\",\r\n//           \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ itemId: itemId }),\r\n//       })\r\n//         .then((resp) => resp.json())\r\n//         .then((data) => {\r\n//           console.log(data);\r\n//         });\r\n//     }\r\n//   };\r\n\r\n//   //remove from cart\r\n//   const removeFromCart = (itemId) => {\r\n//     setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n//     if (localStorage.getItem(\"auth-token\")) {\r\n//       fetch(\"http://localhost:4000/removefromcart\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           Accept: \"application/form-data\",\r\n//           \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ itemId: itemId }),\r\n//       })\r\n//         .then((resp) => resp.json())\r\n//         .then((data) => {\r\n//           console.log(data);\r\n//         });\r\n//     }\r\n//   };\r\n\r\n//   //get total cart amount\r\n//   const getTotalCartAmount = () => {\r\n//     let totalAmount = 0;\r\n//     for (const item in cartItems) {\r\n//       if (cartItems[item] > 0) {\r\n//         let itemInfo = all_product.find(\r\n//           (product) => product.id === Number(item)\r\n//         );\r\n//         totalAmount += cartItems[item] * itemInfo.new_price;\r\n//       }\r\n//     }\r\n//     return totalAmount;\r\n//   };\r\n\r\n//   //get total cart items\r\n//   const getTotalCartItems = () => {\r\n//     let totalItem = 0;\r\n//     for (const item in cartItems) {\r\n//       if (cartItems[item] > 0) {\r\n//         totalItem += cartItems[item];\r\n//       }\r\n//     }\r\n//     return totalItem;\r\n//   };\r\n\r\n//   const contextValue = {\r\n//     getTotalCartItems,\r\n//     getTotalCartAmount,\r\n//     all_product,\r\n//     cartItems,\r\n//     addToCart,\r\n//     removeFromCart,\r\n//   };\r\n//   return (\r\n//     <ShopContext.Provider value={contextValue}>\r\n//       {props.children}\r\n//     </ShopContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default ShopContextProvider;\r\n\r\nimport React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [all_product, setAll_Product] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const getDefaultCart = () => {\r\n    return [];\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/allproducts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setAll_Product(data));\r\n\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetch(\"http://localhost:4000/getcart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/form-data\",\r\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          setCartItems(data);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const addToCart = (itemId, size) => {\r\n    const existingItem = cartItems.find(\r\n      (item) => item.product_id === itemId && item.size === size\r\n    );\r\n    if (existingItem) {\r\n      const updatedCart = cartItems.map((item) => {\r\n        if (item.product_id === itemId && item.size === size) {\r\n          return { ...item, quantity: item.quantity + 1 };\r\n        }\r\n        return item;\r\n      });\r\n      setCartItems(updatedCart);\r\n    } else {\r\n      setCartItems([\r\n        ...cartItems,\r\n        { product_id: itemId, size: size, quantity: 1 },\r\n      ]);\r\n    }\r\n\r\n    // Update cart data in the backend\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetch(\"http://localhost:4000/addtocart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/form-data\",\r\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ itemId: itemId, size: size }),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (itemId, size) => {\r\n    const existingItem = cartItems.find(\r\n      (item) => item.product_id === itemId && item.size === size\r\n    );\r\n    if (existingItem && existingItem.quantity > 1) {\r\n      const updatedCart = cartItems.map((item) => {\r\n        if (item.product_id === itemId && item.size === size) {\r\n          return { ...item, quantity: item.quantity - 1 };\r\n        }\r\n        return item;\r\n      });\r\n      setCartItems(updatedCart);\r\n    } else {\r\n      const updatedCart = cartItems.filter(\r\n        (item) => !(item.product_id === itemId && item.size === size)\r\n      );\r\n      setCartItems(updatedCart);\r\n    }\r\n\r\n    // Update cart data in the backend\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetch(\"http://localhost:4000/removefromcart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/form-data\",\r\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ itemId: itemId, size: size }),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item of cartItems) {\r\n      const itemInfo = all_product.find(\r\n        (product) => product.id === item.product_id\r\n      );\r\n      if (itemInfo) {\r\n        totalAmount += item.quantity * itemInfo.new_price;\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  const getTotalCartItems = () => {\r\n    let totalItem = 0;\r\n    for (const item of cartItems) {\r\n      totalItem += item.quantity;\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  const contextValue = {\r\n    getTotalCartItems,\r\n    getTotalCartAmount,\r\n    all_product,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAE9C,MAAMM,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAO,EAAE;EACX,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKR,cAAc,CAACQ,IAAI,CAAC,CAAC;IAEvC,IAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;MACtCN,KAAK,CA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}