{"ast":null,"code":"// import React, { useContext } from \"react\";\n// import \"./CartItems.css\";\n// import { ShopContext } from \"../../Context/ShopContext\";\n// import remove_icon from \"../Assets/cart_cross_icon.png\";\n\n// const CartItems = () => {\n//   const { getTotalCartAmount, all_product, cartItems, removeFromCart } =\n//     useContext(ShopContext);\n\n//   return (\n//     <div className=\"cartitems\">\n//       <div className=\"cartitems-format-main\">\n//         <p>Products</p>\n//         <p>Title</p>\n//         <p>Size</p>\n//         <p>Price</p>\n//         <p>Quantity</p>\n//         <p>Total</p>\n//         <p>Remove</p>\n//       </div>\n//       <hr />\n//       {all_product.map((e) => {\n//         if (cartItems[e.id] > 0) {\n//           return (\n//             <div>\n//               <div className=\"cartitems-format cartitems-format-main\">\n//                 <img src={e.image} alt=\"\" className=\"carticon-product-icon\" />\n//                 <p>{e.name}</p>\n//                 <p class=\"sizeVal\">Size</p>\n//                 <p class=\"priceNum\">₹{e.new_price}</p>\n//                 <button className=\"cartitems-quantity\">\n//                   {cartItems[e.id]}\n//                 </button>\n//                 <p>₹{e.new_price * cartItems[e.id]}</p>\n//                 <img\n//                   className=\"cartitems-remove-icon\"\n//                   src={remove_icon}\n//                   onClick={() => {\n//                     removeFromCart(e.id);\n//                   }}\n//                   alt=\"\"\n//                 />\n//               </div>\n//               <hr />\n//             </div>\n//           );\n//         }\n//         return null;\n//       })}\n//       <div className=\"cartitems-down\">\n//         <div className=\"cartitems-total\">\n//           <h1>cart Totals</h1>\n//           <div>\n//             <div className=\"cartitems-total-item\">\n//               <p>Subtotal</p>\n//               <p>₹{getTotalCartAmount()}</p>\n//             </div>\n//             <hr />\n//             <div className=\"cartitems-total-item\">\n//               <p>Shipping Fee</p>\n//               <p>Free</p>\n//             </div>\n//             <hr />\n//             <div className=\"cartitems-total-item\">\n//               <h3>Total</h3>\n//               <h3>₹{getTotalCartAmount()}</h3>\n//             </div>\n//           </div>\n//           <button>PLACE ORDER</button>\n//         </div>\n//         <div className=\"cartitems-promocode\">\n//           <p>If you have a promo code, Enter it here</p>\n//           <div className=\"cartitems-promobox\">\n//             <input type=\"text\" placeholder=\"promo code\" />\n//             <button>Submit</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CartItems;\n\n// import React, { useContext, useState } from \"react\";\n// import \"./CartItems.css\";\n// import { ShopContext } from \"../../Context/ShopContext\";\n// import remove_icon from \"../Assets/cart_cross_icon.png\";\n\n// const CartItems = () => {\n//   const { getTotalCartAmount, all_product, cartItems, removeFromCart } =\n//     useContext(ShopContext);\n//   const [promoCode, setPromoCode] = useState(\"\");\n\n//   const handlePromoCodeSubmit = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:4000/applypromocode\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           \"auth-token\": localStorage.getItem(\"auth-token\"), // Assuming you store the JWT token in localStorage\n//         },\n//         body: JSON.stringify({ promoCode }),\n//       });\n//       if (response.ok) {\n//         alert(\"Promo code applied successfully.\");\n//       } else {\n//         const data = await response.json();\n//         alert(data.errors || \"Failed to apply promo code.\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"Failed to apply promo code.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"cartitems\">\n//       <div className=\"cartitems-format-main\">\n//         <p>Products</p>\n//         <p>Title</p>\n//         <p>Size</p>\n//         <p>Price</p>\n//         <p>Quantity</p>\n//         <p>Total</p>\n//         <p>Remove</p>\n//       </div>\n//       <hr />\n//       {all_product.map((e) => {\n//         if (cartItems[e.id] > 0) {\n//           return (\n//             <div key={e.id}>\n//               <div className=\"cartitems-format cartitems-format-main\">\n//                 <img src={e.image} alt=\"\" className=\"carticon-product-icon\" />\n//                 <p>{e.name}</p>\n//                 <p className=\"sizeVal\">Size</p>\n//                 <p className=\"priceNum\">₹{e.new_price}</p>\n//                 <button className=\"cartitems-quantity\">\n//                   {cartItems[e.id]}\n//                 </button>\n//                 <p>₹{e.new_price * cartItems[e.id]}</p>\n//                 <img\n//                   className=\"cartitems-remove-icon\"\n//                   src={remove_icon}\n//                   onClick={() => {\n//                     removeFromCart(e.id);\n//                   }}\n//                   alt=\"\"\n//                 />\n//               </div>\n//               <hr />\n//             </div>\n//           );\n//         }\n//         return null;\n//       })}\n//       <div className=\"cartitems-down\">\n//         <div className=\"cartitems-total\">\n//           <h1>cart Totals</h1>\n//           <div>\n//             <div className=\"cartitems-total-item\">\n//               <p>Subtotal</p>\n//               <p>₹{getTotalCartAmount()}</p>\n//             </div>\n//             <hr />\n//             <div className=\"cartitems-total-item\">\n//               <p>Shipping Fee</p>\n//               <p>Free</p>\n//             </div>\n//             <hr />\n//             <div className=\"cartitems-total-item\">\n//               <h3>Total</h3>\n//               <h3>₹{getTotalCartAmount()}</h3>\n//             </div>\n//           </div>\n//           <button>PLACE ORDER</button>\n//         </div>\n//         <div className=\"cartitems-promocode\">\n//           <p>If you have a promo code, Enter it here</p>\n//           <div className=\"cartitems-promobox\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"promo code\"\n//               value={promoCode}\n//               onChange={(e) => setPromoCode(e.target.value)}\n//             />\n//             <button onClick={handlePromoCodeSubmit}>Submit</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CartItems;","map":{"version":3,"names":[],"sources":["C:/Users/dahew/Desktop/E-commerce/frontend/src/Components/CartItems/CartItems.jsx"],"sourcesContent":["// import React, { useContext } from \"react\";\r\n// import \"./CartItems.css\";\r\n// import { ShopContext } from \"../../Context/ShopContext\";\r\n// import remove_icon from \"../Assets/cart_cross_icon.png\";\r\n\r\n// const CartItems = () => {\r\n//   const { getTotalCartAmount, all_product, cartItems, removeFromCart } =\r\n//     useContext(ShopContext);\r\n\r\n//   return (\r\n//     <div className=\"cartitems\">\r\n//       <div className=\"cartitems-format-main\">\r\n//         <p>Products</p>\r\n//         <p>Title</p>\r\n//         <p>Size</p>\r\n//         <p>Price</p>\r\n//         <p>Quantity</p>\r\n//         <p>Total</p>\r\n//         <p>Remove</p>\r\n//       </div>\r\n//       <hr />\r\n//       {all_product.map((e) => {\r\n//         if (cartItems[e.id] > 0) {\r\n//           return (\r\n//             <div>\r\n//               <div className=\"cartitems-format cartitems-format-main\">\r\n//                 <img src={e.image} alt=\"\" className=\"carticon-product-icon\" />\r\n//                 <p>{e.name}</p>\r\n//                 <p class=\"sizeVal\">Size</p>\r\n//                 <p class=\"priceNum\">₹{e.new_price}</p>\r\n//                 <button className=\"cartitems-quantity\">\r\n//                   {cartItems[e.id]}\r\n//                 </button>\r\n//                 <p>₹{e.new_price * cartItems[e.id]}</p>\r\n//                 <img\r\n//                   className=\"cartitems-remove-icon\"\r\n//                   src={remove_icon}\r\n//                   onClick={() => {\r\n//                     removeFromCart(e.id);\r\n//                   }}\r\n//                   alt=\"\"\r\n//                 />\r\n//               </div>\r\n//               <hr />\r\n//             </div>\r\n//           );\r\n//         }\r\n//         return null;\r\n//       })}\r\n//       <div className=\"cartitems-down\">\r\n//         <div className=\"cartitems-total\">\r\n//           <h1>cart Totals</h1>\r\n//           <div>\r\n//             <div className=\"cartitems-total-item\">\r\n//               <p>Subtotal</p>\r\n//               <p>₹{getTotalCartAmount()}</p>\r\n//             </div>\r\n//             <hr />\r\n//             <div className=\"cartitems-total-item\">\r\n//               <p>Shipping Fee</p>\r\n//               <p>Free</p>\r\n//             </div>\r\n//             <hr />\r\n//             <div className=\"cartitems-total-item\">\r\n//               <h3>Total</h3>\r\n//               <h3>₹{getTotalCartAmount()}</h3>\r\n//             </div>\r\n//           </div>\r\n//           <button>PLACE ORDER</button>\r\n//         </div>\r\n//         <div className=\"cartitems-promocode\">\r\n//           <p>If you have a promo code, Enter it here</p>\r\n//           <div className=\"cartitems-promobox\">\r\n//             <input type=\"text\" placeholder=\"promo code\" />\r\n//             <button>Submit</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CartItems;\r\n\r\n// import React, { useContext, useState } from \"react\";\r\n// import \"./CartItems.css\";\r\n// import { ShopContext } from \"../../Context/ShopContext\";\r\n// import remove_icon from \"../Assets/cart_cross_icon.png\";\r\n\r\n// const CartItems = () => {\r\n//   const { getTotalCartAmount, all_product, cartItems, removeFromCart } =\r\n//     useContext(ShopContext);\r\n//   const [promoCode, setPromoCode] = useState(\"\");\r\n\r\n//   const handlePromoCodeSubmit = async () => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:4000/applypromocode\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           \"auth-token\": localStorage.getItem(\"auth-token\"), // Assuming you store the JWT token in localStorage\r\n//         },\r\n//         body: JSON.stringify({ promoCode }),\r\n//       });\r\n//       if (response.ok) {\r\n//         alert(\"Promo code applied successfully.\");\r\n//       } else {\r\n//         const data = await response.json();\r\n//         alert(data.errors || \"Failed to apply promo code.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"Failed to apply promo code.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"cartitems\">\r\n//       <div className=\"cartitems-format-main\">\r\n//         <p>Products</p>\r\n//         <p>Title</p>\r\n//         <p>Size</p>\r\n//         <p>Price</p>\r\n//         <p>Quantity</p>\r\n//         <p>Total</p>\r\n//         <p>Remove</p>\r\n//       </div>\r\n//       <hr />\r\n//       {all_product.map((e) => {\r\n//         if (cartItems[e.id] > 0) {\r\n//           return (\r\n//             <div key={e.id}>\r\n//               <div className=\"cartitems-format cartitems-format-main\">\r\n//                 <img src={e.image} alt=\"\" className=\"carticon-product-icon\" />\r\n//                 <p>{e.name}</p>\r\n//                 <p className=\"sizeVal\">Size</p>\r\n//                 <p className=\"priceNum\">₹{e.new_price}</p>\r\n//                 <button className=\"cartitems-quantity\">\r\n//                   {cartItems[e.id]}\r\n//                 </button>\r\n//                 <p>₹{e.new_price * cartItems[e.id]}</p>\r\n//                 <img\r\n//                   className=\"cartitems-remove-icon\"\r\n//                   src={remove_icon}\r\n//                   onClick={() => {\r\n//                     removeFromCart(e.id);\r\n//                   }}\r\n//                   alt=\"\"\r\n//                 />\r\n//               </div>\r\n//               <hr />\r\n//             </div>\r\n//           );\r\n//         }\r\n//         return null;\r\n//       })}\r\n//       <div className=\"cartitems-down\">\r\n//         <div className=\"cartitems-total\">\r\n//           <h1>cart Totals</h1>\r\n//           <div>\r\n//             <div className=\"cartitems-total-item\">\r\n//               <p>Subtotal</p>\r\n//               <p>₹{getTotalCartAmount()}</p>\r\n//             </div>\r\n//             <hr />\r\n//             <div className=\"cartitems-total-item\">\r\n//               <p>Shipping Fee</p>\r\n//               <p>Free</p>\r\n//             </div>\r\n//             <hr />\r\n//             <div className=\"cartitems-total-item\">\r\n//               <h3>Total</h3>\r\n//               <h3>₹{getTotalCartAmount()}</h3>\r\n//             </div>\r\n//           </div>\r\n//           <button>PLACE ORDER</button>\r\n//         </div>\r\n//         <div className=\"cartitems-promocode\">\r\n//           <p>If you have a promo code, Enter it here</p>\r\n//           <div className=\"cartitems-promobox\">\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"promo code\"\r\n//               value={promoCode}\r\n//               onChange={(e) => setPromoCode(e.target.value)}\r\n//             />\r\n//             <button onClick={handlePromoCodeSubmit}>Submit</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CartItems;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}